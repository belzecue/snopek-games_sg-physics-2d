<?xml version="1.0" encoding="UTF-8" ?>
<class name="SGFixedNode2D" inherits="Node2D" version="3.4">
	<brief_description>
		A 2D game object, with its position, rotation and scale represented as fixed-point numbers, from which all other fixed-point nodes descend.
	</brief_description>
	<description>
		A 2D game object with a fixed-point transform (position, rotation and scale). All 2D fixed-point nodes descend from SGFixedNode2D.
		Updating the fixed-point transform properties (like [code]fixed_postion[/code]) will update the corresponding floating-point properties (like [code]position[/code]), but not right away. They'll be updated just before [code]_process()[/code] is called.
		The floating-point transform properties are used for the visual representation of the node. Updating the floating-point properties won't have any affect on the fixed-point versions.
		SGFixedNode2D's will be offset by the transform of their parent node, if it is also an SGFixedNode2D (or one of descendents). If a plain [Node2D] is the parent of an SGFixedNode2D, its floating-point properties will be offset by the floating-point transform of its parent, but its fixed-point transform will be unaffected, possibly leading to unexpected behavior.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_global_fixed_position">
			<return type="SGFixedVector2" />
			<description>
			</description>
		</method>
		<method name="get_global_fixed_rotation" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_global_fixed_transform" qualifiers="const">
			<return type="SGFixedTransform2D" />
			<description>
			</description>
		</method>
		<method name="set_global_fixed_position">
			<return type="void" />
			<argument index="0" name="fixed_position" type="SGFixedVector2" />
			<description>
			</description>
		</method>
		<method name="set_global_fixed_rotation">
			<return type="void" />
			<argument index="0" name="fixed_rotation" type="int" />
			<description>
			</description>
		</method>
		<method name="set_global_fixed_transform">
			<return type="void" />
			<argument index="0" name="fixed_transform" type="SGFixedTransform2D" />
			<description>
			</description>
		</method>
		<method name="update_float_transform">
			<return type="void" />
			<description>
				Immediately updates the floating-point transform to match the fixed-point transform.
				Normally, this is done automatically right before [code]_process()[/code] is called, however, you can use this method to cause this to happen early.
			</description>
		</method>
	</methods>
	<members>
		<member name="fixed_position" type="SGFixedVector2" setter="set_fixed_position" getter="get_fixed_position">
			The position of node as a fixed-point vector.
		</member>
		<member name="fixed_position_x" type="int" setter="_set_fixed_position_x" getter="_get_fixed_position_x" default="0">
			[b]Do not use this property![/b] It only exists to serialize the [code]fixed_position[/code] property to scene files. Use [code]fixed_position[/code] directly instead.
		</member>
		<member name="fixed_position_y" type="int" setter="_set_fixed_position_y" getter="_get_fixed_position_y" default="0">
			[b]Do not use this property![/b] It only exists to serialize the [code]fixed_position[/code] property to scene files. Use [code]fixed_position[/code] directly instead.
		</member>
		<member name="fixed_rotation" type="int" setter="set_fixed_rotation" getter="get_fixed_rotation" default="0">
			The rotation of the node (in radians) as a fixed-point number.
		</member>
		<member name="fixed_scale" type="SGFixedVector2" setter="set_fixed_scale" getter="get_fixed_scale">
			The scale of the node (in radians) as a fixed-point number.
			Note: the physics engine doesn't support collisions shapes that are scaled non-uniformly (ie. having a different [code]x[/code] and [code]y[/code] value). Using a non-uniform [code]fixed_scale[/code] will lead to undefined behavior.
		</member>
		<member name="fixed_scale_x" type="int" setter="_set_fixed_scale_x" getter="_get_fixed_scale_x" default="65536">
			[b]Do not use this property![/b] It only exists to serialize the [code]fixed_scale[/code] property to scene files. Use [code]fixed_scale[/code] directly instead.
		</member>
		<member name="fixed_scale_y" type="int" setter="_set_fixed_scale_y" getter="_get_fixed_scale_y" default="65536">
			[b]Do not use this property![/b] It only exists to serialize the [code]fixed_scale[/code] property to scene files. Use [code]fixed_scale[/code] directly instead.
		</member>
		<member name="fixed_transform" type="SGFixedTransform2D" setter="set_fixed_transform" getter="get_fixed_transform">
			The full fixed-point transform (includes position, rotation and scale).:w
		</member>
	</members>
	<constants>
	</constants>
</class>
